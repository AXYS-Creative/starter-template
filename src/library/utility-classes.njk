---
layout: app
path: library/utility-classes
# Non public facing DELETE ME CHANGE ME
---

<section class="hero">
  <h1>Utility Classes</h1>
  <p class="text-balance">
    Powerful and easy to use utility classes to achieve a wide range of effects.
  </p>
</section>

<section class="cursor-target-section library-section">
  <h2 class="h5">[ Cursor Target - Util ]</h2>
  <strong>Requires custom mouse cursor*</strong>
  <p class="max-width-text">
    If using a mouse cursor, you can set up a <strong>trigger</strong> and
    <strong>target</strong> to spice things up! The class
    <code>cursor-trigger</code> goes on the trigger element along with the
    required data attribute <code>data-cursor-target</code>.
  </p>

  <ul class="classic-list">
    <li>
      <code>data-cursor-target</code> A string that matches the unique class of
      the target element.
    </li>
    <li>
      <code>data-cursor-class</code> A string that adds a custom modifier class
      to the mouse cursor.
    </li>
  </ul>

  <p
    class="cursor-trigger"
    data-cursor-target="cursor-target__dot"
    data-cursor-class="dot-hover-active"
  >
    Hover dot
  </p>
  <div class="cursor-target__dot">•</div>

  <p
    class="cursor-trigger"
    data-cursor-target="cursor-target__icon"
    data-cursor-class="star-icon"
    data-cursor-event="mousemove"
  >
    Hover star (inline with magnet effect)
    <span
      class="cursor-target__icon magnet magnet-strong"
      style="
        display: inline-flex;
        justify-content: center;
        align-items: center;
        cursor: pointer;
        width: 36px;
        height: 36px;
      "
    >
      ★
    </span>
  </p>

  <p
    class="cursor-trigger"
    data-cursor-target="cursor-target__dot"
    data-cursor-class="dot-hover-active"
  >
    Hover the first dot... woah. See note below for fix.
  </p>
  <div class="cursor-target__dot">• &nbsp;&nbsp;(won't target)</div>

  <p>
    Note: If you have multiple elements (or components) with shared
    trigger/target names, but want each instance to be unique from one another
    you'll need to wrap each instance in a container with the class
    <code>cursor-pair</code> Otherwise only the first instance will work
    properly.
  </p>
  <p class="cursor-pair" data-cursor-target="cursor-target__square">
    <span class="cursor-trigger">Hover square</span>
    &nbsp;&nbsp;
    <span class="cursor-target__square">◼︎</span>
  </p>
  <p class="cursor-pair" data-cursor-target="cursor-target__square">
    <span class="cursor-trigger">Hover square</span>
    &nbsp;&nbsp;
    <span class="cursor-target__square">◼︎</span>
  </p>
</section>

<section class="fade-text-section library-section">
  <h2 class="h5 fade-text">[ Fade Text - Util ]</h2>
  <p class="fade-text" data-fade-duration="0.5">
    This uses GSAP's <strong>ScrollTrigger</strong> and
    <strong>SplitText</strong> plugins to fade in either words or characters.
  </p>
  <p class="fade-text" data-fade-type="words" data-fade-duration="0.5">
    This paragraph will animate each word rather than each character. Lorem
    ipsum dolor sit amet consectetur adipisicing elit. Error iste corrupti
    tempora aspernatur, consequatur blanditiis, repellat, quibusdam perferendis
    sequi dignissimos dolores? Magni, nisi quae.
  </p>
  <p
    class="fade-text"
    data-fade-type="chars"
    data-fade-once="true"
    data-fade-style="linear"
    data-fade-duration="2"
  >
    This text should only fade in the <strong>very first time!</strong> The
    letter split should also take a bit longer than expected (2s), making use of
    the data-fill-duration attribute.
  </p>
  <p
    class="fade-text"
    data-fade-style="linear"
    data-fade-scrub="true"
    data-fade-end="bottom 60%"
  >
    This text should scrub in a linear animation.
  </p>
  <br />
  <p class="fade-text">
    You can use the <code class="gsap-animate">fade-text</code> utility class
    with the following attributes:
  </p>
  <ul class="classic-list">
    <li class="fade-text">
      <code class="gsap-animate">data-fade-type</code> A string that takes in
      <code class="gsap-animate">words | chars</code>. Defaults to
      <code class="gsap-animate">chars</code>
    </li>
    <li class="fade-text">
      <code class="gsap-animate">data-fade-style</code> A string that takes in
      <code class="gsap-animate">linear | random</code>. Defaults to
      <code class="gsap-animate">random</code>
    </li>
    <li class="fade-text">
      <code class="gsap-animate">data-fade-duration</code> A number to control
      the animation duration. Defaults to <code class="gsap-animate">0.25</code>
    </li>
    <li class="fade-text">
      <code class="gsap-animate">data-fade-once</code> A boolean to fire to
      animation only the first time it comes into view. Defaults to
      <code class="gsap-animate">false</code>
    </li>
    <li class="fade-text">
      <code class="gsap-animate">data-fade-scrub</code> A boolean to scrub
      through the animation rather than playing it. Defaults to
      <code class="gsap-animate">false</code>
    </li>
    <li class="fade-text">
      <code class="gsap-animate">data-fade-start</code> A string to set the
      start animation. Defaults to
      <code class="gsap-animate">"top 98%"</code>
    </li>
    <li class="fade-text">
      <code class="gsap-animate">data-fade-end</code> A string to set the end
      animation. Defaults to
      <code class="gsap-animate">"bottom 2%"</code>
    </li>
    <li class="fade-text">
      <code class="gsap-animate">data-fade-markers</code> A boolean to toggle
      visual debugging markers.
      <code class="gsap-animate">false</code>
    </li>
  </ul>
</section>

<section class="fill-text-section">
  <h2 class="h5 fill-text">[ Fill Text - Util ]</h2>
  <br />
  <br />
  <strong class="fill-text" data-fill-scrub="false">
    Note: Flexbox affects the line by line animation <sup>*</sup>
  </strong>
  <br />
  <br />
  <h3 class="h6 fill-text" data-fill-speed="slow">
    This is a random slow title.....
  </h3>
  <br />
  <br />
  <p
    class="fill-text"
    data-fill-speed="fast"
    data-fill-scrub="false"
    data-fill-once="true"
    data-fill-markers="false"
  >
    Use the <strong>'fill-text'</strong> utility class to get this effect.
    Modify the speed with <strong>'data-fill-text-speed'</strong> This comes
    with aditional configs, one of which detaches scrub and allows you to fire
    the animation once. Lorem ipsum dolor, sit amet consectetur adipisicing
    elit. Non laudantium ad tempora facilis tempore, enim earum molestiae iusto
    doloremque incidunt voluptatum, dolorum, obcaecati sint officia cum quia.
    Itaque et, ad accusantium a impedit, consectetur, magni debitis tenetur ab
    odio laborum!
  </p>
  <br />
  <br />
  <p class="fill-text" data-fill-speed="slow">
    Use the <strong>'fill-text'</strong> utility class to get this effect.
    Modify the speed with <strong>'data-fill-text-speed'</strong> This comes
    with aditional configs, one of which detaches scrub and allows you to fire
    the animation once. Lorem ipsum dolor, sit amet consectetur adipisicing
    elit. Non laudantium ad tempora facilis tempore, enim earum molestiae iusto
    doloremque incidunt voluptatum, dolorum, obcaecati sint officia cum quia.
    Itaque et, ad accusantium a impedit, consectetur, magni debitis tenetur ab
    odio laborum!
  </p>
  <br />
  <br />
  <ul class="classic-list">
    <li>Requires the util class <code>fill-text</code></li>
    <li>
      <code>data-fill-speed</code> Optional string, accepts either
      <code>fast | slow | null</code> Default is <code>null</code>
    </li>
    <li>
      <code>data-fill-scrub</code> boolean, to toggle scrubbing. Defaults to
      <code>true</code>
    </li>
    <li>
      <code>data-fill-once</code> boolean, to toggle multiple animations when
      scrolling to the element. Defaults to <code>false</code>
    </li>
    <li>
      <code>data-fill-markers</code> boolean, to toggle visual debugging
      markers. Defaults to <code>false</code>
    </li>
  </ul>
</section>

<section class="glitch-text-section library-section">
  <h2 class="h5">
    <span class="glitch-scroll">[ Glitch Text&nbsp-&nbsp</span>
    <span class="glitch-cycle" data-glitch-cycle-words="Util, Class">
      Util </span
    >&nbsp;]
  </h2>
  <p>
    Utilize GSAP's <code>text-scrambler</code> effect! While not required, there
    is a class: <code>glitch-text</code>, that clips the max width to the
    content width to prevent overshooting. This could be used for other
    variable/util needs.
  </p>

  <h3 class="h6">Glitch Cycle</h3>
  <p>
    The glitch cycle uses the <code>glitch-cycle</code> class along with
    multiple <code>data</code> attributes to configure.
  </p>
  <ul class="classic-list">
    <li>
      <code
        >data-glitch-cycle-words="creative, responsive, accessible, innovative,
        engaging"</code
      >
    </li>
    <li>
      <code
        >data-glitch-cycle-colors="#e48c66, #007bff, var(--color-font--primary),
        #c0c0c0, #007bff"</code
      >
    </li>
    <li><code>data-glitch-cycle-interval="2000"</code></li>
  </ul>
  <h6>
    Sample:
    <span
      class="glitch-cycle"
      data-glitch-cycle-words="creative, responsive, accessible, innovative, engaging"
      data-glitch-cycle-colors="#e48c66, #007bff, var(--color-font--primary), #c0c0c0, #007bff"
      data-glitch-cycle-interval="2000"
    >
      Creative
    </span>
  </h6>

  <br />

  <h3 class="h6">Glitch Scroll</h3>
  <p>
    The class <code>glitch-scroll</code> will scramble the text when the element
    comes into view. Use the following data attributes to customize the
    experience:
  </p>
  <ul class="classic-list">
    <li>
      <code>data-glitch-chars</code> String value determining scramle characters
      shown. Default is <code>"upperAndLowerCase"</code>
    </li>
    <li>
      <code>data-glitch-reveal-delay</code> Number, the delay of the scroll
      animation. Default is <code>0.05</code>
    </li>
    <li>
      <code>data-glitch-duration</code> Number, the duration of the glitch
      animation. Default is <code>0.75</code>
    </li>
    <li>
      <code>data-glitch-once</code> An optional boolean that will toggle the
      effect to occur only the first time the element scrolls into view. Default
      is <code>false</code>
    </li>
    <li>
      <code>data-glitch-trigger</code> String, the class or id (don't forget .
      or #) of the element that triggers the effect. Default is the glitch
      element itself.
    </li>
    <li>
      <code>data-glitch-start</code> String, the parameters for scrollTrigger.
      Default is <code>"top 98%"</code>
    </li>
    <li>
      <code>data-glitch-end</code> String, the parameters for scrollTrigger.
      Default is <code>"bottom 2%"</code>
    </li>
    <li>
      <code>data-glitch-markers</code> Optional boolean, markers to help
      build/debug. Default is
      <code>false</code>
    </li>
  </ul>
  <p class="glitch-scroll">
    This will glitch out as many times as you scroll into view. Default
    behavior.
  </p>
  <p class="glitch-scroll" data-glitch-once="true">
    This will only glitch out once.
  </p>
  <p
    class="glitch-text glitch-scroll"
    data-glitch-trigger=".glitch-trigger-subtitle"
    data-glitch-end="bottom center"
  >
    This will glitch when the subtitle "Glitch Trigger/Target" comes into view.
    Great for pinned sections, just don't forget to add the '.' with the
    classname!
  </p>

  <br />

  <h3 class="h6">Glitch Hover</h3>
  <p>
    The class <code>glitch-hover</code> causes the innerText (works with nested
    elements) to scramble on hover or focus. Comes with the following configs:
  </p>
  <ul class="classic-list">
    <li>
      <code>data-glitch-new-text</code> A string that changes the glitch text to
      a new message. Defaults to <code>null</code>
    </li>
    <li>
      <code>data-glitch-out</code> A boolean that toggles if the animation
      should also occur on mouseleave and blur. Defaults to <code>false</code>
    </li>
  </ul>
  <a href="/" class="cta-1 glitch-hover"> Hover over me </a>
  <a href="/" class="classic-link glitch-hover" data-glitch-out="true">
    Hover over me
  </a>
  <a
    href="/"
    class="classic-link glitch-hover"
    data-glitch-new-text="Wow, so cool"
  >
    Hover to change
  </a>

  <br />

  <h3 class="h6 glitch-trigger-subtitle">Glitch Trigger/Target</h3>
  <p>
    The class <code>glitch-trigger</code> will act as the hover/focus point to
    trigger the glitch elsewhere. This requires the
    <code>data-glitch-target="glitch-target__arbitrary"</code> which takes a
    unique value that matches the class of the target. The target will then have
    the class that matches <code>class="glitch-target__arbitrary"</code>
  </p>

  <div class="glitch-pair">
    <p>
      This one can get tricky with scaling e.g. using target glitch on a
      component since there would be multiple triggers and targets with the same
      value. A work around is using a parent wrapper with the class
      <code>glitch-pair</code> IF the elements are targets in the markup (rather
      than nested, such as .cta-2).
    </p>
    <br />
    <br />
    <button
      class="cta-1 glitch-trigger"
      data-glitch-target="glitch-target__paragraph"
    >
      Hover or focus me
    </button>
    <br />
    <br />
    <p class="glitch-target__paragraph">This text should now glitch out</p>
  </div>
</section>

<section class="gradient-border-section library-section">
  <h2 class="h5">[ Gradient border - Util ]</h2>
  <p>
    Gradient borders. Simple but confusing. Saw Okta doing this and wanted to
    see what it was about.
  </p>

  <div class="gradient-border">
    <h3 class="h6">Gradient border</h3>
    <p>
      Wow so cool! Lorem ipsum dolor sit, amet consectetur adipisicing elit.
      Molestiae commodi veritatis totam harum accusamus quia sint aliquam quod
      non, earum reiciendis, minus consequuntur dolores.
    </p>
  </div>
</section>

<section class="gsap-animate-section library-section">
  <h2 class="gsap-animate-section__title gsap-animate h5">
    [ GSAP animate - Util ]
  </h2>
  <strong class="gsap-animate-section__subtitle gsap-animate">
    <sup>*</sup>Requires custom code/css to define the animation
  </strong>
  <p class="gsap-animate-section__desc gsap-animate">
    With the utility class <code>gsap-animate</code>, you'll unlock the powers
    of GSAP's <code>scrollTrigger</code> plugin. When the element comes into
    view, you'll be able to apply additional styles with the temporary
    <code>gsap-animated</code> class.
  </p>

  <ul class="classic-list">
    <li class="gsap-animate-section__li gsap-animate">
      <code>data-gsap-once</code> Boolean, to toggle the animation only the
      first time. Default is <code>false</code>.
    </li>
    <li class="gsap-animate-section__li gsap-animate">
      <code>data-gsap-trigger</code> String, the class or id (don't forget . or
      #) of the element that triggers the effect. Default is the gsap-animate
      element itself.
    </li>
    <li class="gsap-animate-section__li gsap-animate">
      <code>data-gsap-start</code> String, the parameters for scrollTrigger.
      Default is <code>"top 98%"</code>
    </li>
    <li class="gsap-animate-section__li gsap-animate">
      <code>data-gsap-end</code> String, the parameters for scrollTrigger.
      Default is <code>"bottom 2%"</code>
    </li>
    <li class="gsap-animate-section__li gsap-animate">
      <code>data-gsap-markers</code> Boolean, markers to help build/debug.
      Default is
      <code>false</code>
    </li>
  </ul>
</section>
