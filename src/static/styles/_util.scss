.section-width {
  @include width-clamp;
  @include section-padding;
}
.section-width--thin {
  @include section-padding(thin);
}
.section-width--full {
  @include width-full;
}

.classic-link {
  @include btn-type--underline;
}

.classic-list {
  @include column-start;
  gap: 0.5ch;

  li {
    margin-inline: 1.8ch;
  }

  &:is(ul) {
    li {
      list-style-type: circle;
    }
  }
}

.mask-icon {
  @include mask-image();

  width: 1em;
  height: 1em;
}

.max-width-text {
  display: inline-block;
  max-width: 620px;
}

.sr-only {
  @include sr-only;
}

// Library
@media all {
  .pin-steps {
    @include hide-content;
    @include column-start;
    position: absolute;
    top: 0;
    right: 0;
    width: 12px;
    height: 100%;

    .pin-step {
      background: linear-gradient(180deg, $coral, $black);
      flex: 1;
      width: 100%;
    }
  }

  .text-fill,
  .text-fill-hover {
    @include text-fill;

    &:is(.text-fill-hover) {
      background-size: 0%;
      // -webkit-text-fill-color: rgba(255, 255, 255, 0.5);
      transition: $ease;

      @include desktop-hover {
        background-size: 100%;
      }
    }
  }

  .glitch-text {
    max-width: var(--content-width); // Prevent overflow
    overflow: hidden;
  }

  .glitch-hover,
  [class*="glitch-target__"] {
    white-space: nowrap;
  }

  .glitch-hover {
    // overflow: hidden; // Leave separate from above selector, or else it will hide the glitch target

    .btn__text {
      display: inline-flex;
      overflow: hidden; // if used on btn.njk component
    }
  }

  .gradient-border {
    @include gradient-border;
    padding: 24px;
    border-radius: 16px;
  }

  .grid-fade {
    position: relative;
    overflow: hidden;

    .grid-fade__overlay {
      position: absolute;
      top: 0;
      width: 100%;
      height: 100%;
      display: flex;
      flex-wrap: wrap;
      z-index: 1;
      pointer-events: none;

      &--tile {
        // min-width controlled via javascript/config
        // border: $test;
        // opacity: 1 !important;
        flex: 1 0 24px;
        background: var(--color-background);
        aspect-ratio: 1;
        // transition: $ease;
        transition: 0.5s ease;
      }
    }
  }

  .magnet {
    display: inline-flex; // ensure it can be transformed
    transition: $magnet;
  }

  .text-fade {
    .text-fade__words,
    .text-fade__chars {
      display: inline-block;
    }

    // &.text-fade--active {

    // }
  }

  .text-scale {
    .text-scale__words,
    .text-scale__chars {
      display: inline-block;
    }

    // &.text-fade--active {

    // }
  }

  .typing-cycle,
  .typing-scroll {
    .typing-text-cursor {
      animation: typing-flicker 1s infinite;
    }

    @keyframes typing-flicker {
      from {
        opacity: 1;
      }
      to {
        opacity: 0;
      }
    }
  }

  .icon-md {
    width: 20px;
    height: 20px;
  }

  .icon-sm {
    width: 16px;
    height: 16px;
  }

  .btn--split-text {
    position: relative;

    @include mq-motion-allow {
      transition: $ease, $magnet;
    }

    @include desktop-hover {
      color: var(--color-link--hover);

      .letter-group {
        translate: 0 -100%;

        @for $i from 1 through 99 {
          &:nth-of-type(#{$i}) {
            transition: translate 0.6s $cubic-ease $i * 0.02s;
          }
        }
      }
    }

    &__content {
      // overflow hidden on parent was hiding the tooltip on focus
      display: inline-flex;
      overflow: hidden;
    }

    .letter-group {
      display: grid;

      @for $i from 1 through 99 {
        &:nth-of-type(#{$i}) {
          transition: translate 0.6s $cubic-ease $i * 0.02s;
        }
      }

      .letter {
        position: relative;
        grid-area: 1 / 1;

        &::after {
          content: attr(data-char);
          position: absolute;
          bottom: -100%;
          left: 0;
        }
        // &:nth-of-type(2) {
        //   translate: 0 100%;
        // }
      }

      &.space {
        margin-inline-start: 0.5ch;

        &:last-of-type {
          display: none; // Hides extra space character for social media on contact page
        }
      }
    }

    &[data-hover-alt] {
      @include desktop-hover {
        .letter-group {
          @for $i from 1 through 25 {
            &:nth-of-type(#{$i}) {
              transition: translate 0.6s $cubic-ease $i * 0.02s;
            }
          }
        }
      }

      .letter-group {
        transition: 0s;
      }
    }
  }

  a.btn--bg-slide,
  button.btn--bg-slide {
    position: relative;
    background: none; // needs specificty lift
    overflow: hidden;

    @include desktop-hover {
      transition: $ease 0.125s, $magnet; // Edge case not used with component (doesn't have .btn__text)

      .btn__text,
      .btn__icon-group,
      .btn__icon-start,
      .btn__icon-end {
        transition: inherit;
      }
    }

    &:is(.btn-type--solid) {
      @include slide-solid-btn;

      &[data-btn-slide="left"] {
        @include slide-solid-btn(left);
      }

      &[data-btn-slide="up"] {
        @include slide-solid-btn(up);
      }

      &[data-btn-slide="down"] {
        @include slide-solid-btn(down);
      }
    }

    &:is(.btn-type--outline) {
      color: var(--color-btn-text); // If used outside of btn.njk

      .btn__text {
        color: inherit;
      }

      @include slide-outline-btn;

      &[data-btn-slide="left"] {
        @include slide-outline-btn(left);
      }

      &[data-btn-slide="up"] {
        @include slide-outline-btn(up);
      }

      &[data-btn-slide="down"] {
        @include slide-outline-btn(down);
      }
    }

    &::before {
      content: "";
      position: absolute;
      // position and height defined in btn type (:is above)
      inset: 0;
      background: var(--color-btn-bg);
      z-index: -1;
      transition: 0.5s $cubic-ease-sudden;
    }
  }

  .btn--underline {
    @include btn-type--underline;
  }

  // DELETE ME â€” Template content

  .library-section {
    // library section styles - Doesn't work with Swiper or text-fill sections
    @include width-clamp;
    @include section-padding;
    @include column-start;
    gap: 24px;

    .text-fade,
    .text-scale {
      code.gsap-animate {
        background: transparent;

        &.gsap-animated {
          background: var(--color-surface--1);
          transition: 0.56s ease 0.36s;
        }
      }
    }

    .tilt-card-group {
      @include row-start;
      flex-wrap: wrap;
      gap: 24px;
      width: 100%;
      overflow: hidden;

      @include mq-min(lg) {
        padding-block: var(--spacing--lg);
      }

      .tilt-card {
        @include column-start;
        aspect-ratio: 1 / 1.25;
        max-width: 450px;
        border-radius: var(--radius);
        background: var(--color-surface--1);
        padding: var(--spacing);
        flex: 1 1 320px;

        @include mq-max(md) {
          width: 100%;
        }

        .cta-group {
          margin-top: auto;
        }

        &--3d {
          @include desktop-hover {
            transform-style: preserve-3d;
            perspective: 1000px;

            h3,
            p,
            ol,
            .cta-group {
              transform: translateZ(20px); // higher value for more pop.
            }
          }

          h3,
          p,
          ol,
          .cta-group {
            transition: 0.3s ease !important;
          }
        }
      }
    }
  }

  .library-section-info {
    @include column-start;
    gap: 24px;
    margin-block: var(--spacing--lg);
  }

  .carousel-swiper-section,
  .text-fill-section {
    @include width-clamp;
    @include section-padding;
  }

  .gsap-animate-section {
    overflow: hidden;

    @mixin fade-snap-left($delay: 0s) {
      @include mq-motion-allow {
        opacity: 0;
        translate: 96px 0;
        transition: 0.24s $cubic-ease-back $delay;

        &.gsap-animated {
          opacity: 1;
          translate: 0 0;
        }
      }
    }

    &__title,
    &__subtitle {
      @include fade-snap-left(0.08s);
    }

    &__desc {
      @include fade-snap-left(0.12s);
    }

    &__li {
      @include fade-snap-left(0.16s);
    }
  }

  .video-bg-section {
    .video-bg--sample-1 {
      @include gradient-border(130deg);
      @include column-center(flex-end);
      gap: var(--spacing);
      width: 100%;
      padding: 364px 64px 64px;
      border-radius: var(--radius--lg);

      @include mq-max(lg) {
        padding: 296px 40px 40px;
      }
    }
  }

  .video-bg--sample-2 {
    @include column-center(flex-start);
    gap: var(--spacing);
    width: min(100%, 420px);
    min-height: 580px;
    padding: 48px;
    border-radius: var(--radius--lg);
  }
}

// Media Query Utility, be mindful of flex vs block
@media all {
  .xxl-up {
    display: none;

    @include mq-min(xxl) {
      display: block;
    }
  }

  .xxl-down {
    display: none;

    @include mq-max(xxl) {
      display: block;
    }
  }

  .xl-up {
    display: none;

    @include mq-min(xl) {
      display: block;
    }
  }

  .xl-down {
    display: none;

    @include mq-max(xl) {
      display: block;
    }
  }

  .lg-up {
    display: none;

    @include mq-min(lg) {
      display: block;
    }
  }

  .lg-down {
    display: none;

    @include mq-max(lg) {
      display: block;
    }
  }

  .md-up {
    display: none;

    @include mq-min(md) {
      display: block;
    }
  }

  .md-down {
    display: none;

    @include mq-max(md) {
      display: block;
    }
  }

  .sm-up {
    display: none;

    @include mq-min(sm) {
      display: block;
    }
  }

  .sm-down {
    display: none;

    @include mq-max(sm) {
      display: block;
    }
  }
}

// CMS Tokens
@media all {
  .color-primary {
    color: var(--color-brand--primary);
  }
  .color-secondary {
    color: var(--hero-color--secondary);
  }

  .text-balance {
    text-wrap: balance;
  }

  .text-center {
    text-align: center;
  }

  // text-fade
  // text-fill

  .text-glow {
    filter: drop-shadow(0px 0px 6px #fff);
  }
  .text-stroke {
    -webkit-text-stroke: 1px var(--color-font--primary);
    color: transparent;
    font-weight: 500; // slightly above regular
  }

  .text-underline {
    text-decoration: underline;
  }

  .text-italic {
    font-style: italic;
  }

  // font-size util
  @for $i from 12 through 96 {
    .fs-#{$i} {
      font-size: #{$i}px;
    }
  }

  // font-weight util
  $font-weights: (100, 200, 300, 400, 500, 600, 700, 800, 900);

  @each $weight in $font-weights {
    .fw-#{$weight} {
      font-weight: $weight;
    }
  }
  .text-thin,
  .text-hairline {
    font-weight: 100;
  }
  .text-extra-light,
  .text-ultra-light {
    font-weight: 200;
  }
  .text-light {
    font-weight: 300;
  }
  .text-normal,
  .text-regular {
    font-weight: 400;
  }
  .text-medium {
    font-weight: 500;
  }
  .text-semi-bold,
  .text-demi-bold {
    font-weight: 500;
  }
  .text-bold {
    font-weight: 700;
  }
  .text-extra-bold,
  .text-ultra-bold {
    font-weight: 800;
  }
  .text-black,
  .text-heavy {
    font-weight: 900;
  }

  // margin util: m-16 = margin: 16px || mx8 = margin-left/right: 8px || mt--4 = margin-top: -4px
  $min: -128;
  $max: 128;
  $step: 2;

  $directions: (
    "": "",
    "t": "block-start",
    "r": "inline-end",
    "b": "block-end",
    "l": "inline-start",
    "x": "x",
    "y": "y",
  );

  @for $i from $min through $max {
    @if ($i % $step == 0) {
      @each $suffix, $dir in $directions {
        $absValue: abs($i);
        $neg: if($i < 0, "-", "");
        $name: "m#{$suffix}#{$neg}#{$absValue}";

        @if $dir == "" {
          .#{$name} {
            margin: #{$i}px;
          }
        } @else if $dir == "x" {
          .#{$name} {
            margin-left: #{$i}px;
            margin-right: #{$i}px;
          }
        } @else if $dir == "y" {
          .#{$name} {
            margin-top: #{$i}px;
            margin-bottom: #{$i}px;
          }
        } @else {
          .#{$name} {
            margin-#{$dir}: #{$i}px;
          }
        }
      }
    }
  }
}
