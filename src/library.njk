---
layout: app
path: library
# Non public facing DELETE ME
---

<section class="hero">
  <h1>Library</h1>
  <p class="text-balance">
    A playground to build out components and utilites that can be stored as a
    template.
    <br class="xl-up" />
    Pick what you need from the library and then be sure to delete the
    following:
  </p>
  <ol>
    <li>JS library directory</li>
    <li>JS animations.js library blocks</li>
    <li>CSS library directory</li>
    <li>CSS utillity.scss library block</li>
    <li>_data library directory</li>
    <li>_includes library directory</li>
    <li>img Folder library directory</li>
  </ol>
</section>

<section class="tooltip-section library-section">
  <h2 class="h5">[ Tooltip - Component ]</h2>

  <p>
    This includes a tooltip. {% include "./_includes/library/tooltip.njk" %}
  </p>
</section>

<section class="image-slice-section library-section">
  <h2 class="h5">[ Image Slice (Two image reveal) - Component ]</h2>
</section>

<section class="section library-section">
  <h2 class="h5">
    [
    <span class="glitch-scroll" data-glitch-once="false"
      >Glitch Text</span
    >
    -
    <span
      class="glitch-cycle"
      data-glitch-cycle-words="Util, Class, Block"
    >
      Util</span
    >
    ]
  </h2>

  <h3 class="h6">Glitch Cycle</h3>
  <p>The glitch cycle uses the <code>glitch-cycle</code> class along with multiple <code>data</code> attributes to configure.</p>
  <ul class="classic-list">
    <li><code>data-glitch-cycle-words="creative, responsive, accessible, innovative, engaging"</code></li>
    <li><code>data-glitch-cycle-colors="#e48c66, #007bff, #fefefe, #c0c0c0, #007bff"</code></li>
    <li><code>data-glitch-cycle-interval="2000"</code></li>
  </ul>
  <h6>Here’s an example:
    <span
      class="glitch-cycle"
      data-glitch-cycle-words="creative, responsive, accessible, innovative, engaging"
      data-glitch-cycle-colors="#e48c66, #007bff, #fefefe, #c0c0c0, #007bff"
      data-glitch-cycle-interval="2000"
    >
      Creative
    </span>
  </h6>

  <br>

  <h3 class="h6">Glitch Scroll</h3>
  <p>The class <code>glitch-scroll</code> will scramble the text when the element comes into view. Using with the attribute: <code>data-glitch-once="false"</code> will toggle the effect to occur more than once per scroll into view.</p>
  <p class="glitch-scroll">This will only glitch out once. Default behavior.</p>
  <p class="glitch-scroll" data-glitch-once="false">This will glitch out as many times as you scroll into view.</p>
  
  <br>

  <h3 class="h6">Glitch Hover</h3>
  <p>The class <code>glitch-hover</code> causes the innerText (works with nested elements) to scramble on hover or focus.</p>
  <a href="/" class="cta-1 glitch-hover">Hover over me</a>
  <a href="/" class="classic-link glitch-hover">Hover over me</a>

  <br>

  <h3 class="h6">Glitch Sibling</h3>
  <p>The class <code>glitch-trigger</code> will act as the hover/focus point to trigger the glitch elsewhere. This requires the <code>data-glitch-target="glitch-target__arbitrary"</code> which takes a unique value that matches the class of the target. The sibling will then have the class that matches <code>class="glitch-target__arbitrary"</code></p>
  <button class="cta-1 glitch-trigger" data-glitch-target="glitch-target__paragraph">
    Hover or focus me
  </button>
  <p class="glitch-target__paragraph">This text should now glitch out</p>
</section>

<section class="library-section">
  <h2 class="h5">[ Mouse sibling - util ]</h2>
  <p>
    If using a mouse cursor, you can set up a trigger and target to spice things
    up! The class <code>cursor-trigger</code> goes on the trigger element. It also comes
    with a few data attributes such as:
    <ul class="classic-list">
      <li><code>data-cursor-target</code> — which takes the class of the target element</li>
      <li><code>data-cursor-class</code> — which lets use set up a modifier class to the mouse cursor</li>
    </ul>
  </p>

  <p
    class="cursor-trigger"
    data-cursor-target="cursor-target__dot"
    data-cursor-class="dot-hover-active"
  >
    Hover dot
  </p>
  <div class="cursor-target__dot">•</div>

  <p
    class="cursor-trigger"
    data-cursor-target="cursor-target__icon"
    data-cursor-class="star-icon"
    data-cursor-event="mousemove"
  >
    Hover star (inline with magnet effect)
    <span 
      class="cursor-target__icon magnet magnet-strong" 
      style="
        display: inline-flex;
        justify-content: center;
        align-items: center;
        cursor: pointer;
        width: 36px;
        height: 36px;
      "
    >
      ★
    </span>
  </p>
</section>

<section class="tabs-section">
  <h2 class="h5">[ Tabs - Component ]</h2>

  <!-- prettier-ignore -->
  {% set tab_list = library.tabs.tabs %}
  {% include "./_includes/library/tabs.njk" %}
</section>

<h2 class="h5" style="margin: 0 0 48px var(--body-padding)">
  [ Carousel 'Hero' - Component ]
</h2>
<!-- prettier-ignore -->
{% set carousel_hero_autoplay = library.carousel_hero.autoplay %}
{% set carousel_hero_slides = library.carousel_hero.slides %}
{% include "./_includes/library/carousel-hero.njk" %}

<section class="carousel-swiper-section">
  <h2 class="h5">[ Carousel 'Swiper' - Component ]</h2>

  <!-- prettier-ignore -->
  {% set carousel_swiper_autoplay = library.carousel_swiper.autoplay %}
  {% set list = library.carousel_swiper.list %}
  {% set carousel_progress = true %}
  {% include './_includes/library/carousel-swiper.njk' %}
</section>

<!-- prettier-ignore -->
{% set marquee = library.marquee.marquee %}
{% include './_includes/library/marquee.njk' %}

<section class="accordion-section">
  <h2 class="h5" style="margin-bottom: 48px">[ Accordion - Component ]</h2>
  <!-- prettier-ignore -->
  {% set accordion_list = library.accordion.accordion_data %}
  {% include './_includes/library/accordion.njk' %}
</section>

<section class="fill-text-section">
  <h2 class="h5 fill-text">[ Fill Text - Utility ]</h2>
  <br>
  <br>
  <h3 class="h6 fill-text slow-fill">This is a random title...</h3>  
  <br>
  <br>
  <p class="fill-text quick-fill">
    Use the 'fill-text' utility class to get this effect. Note: this relies on a simple utlity class.
    Modify the speed with 'slow-fill' or 'quick-fill'. Lorem ipsum dolor sit
    amet consectetur adipisicing elit. Perferendis earum maxime ab, accusantium
    rem ex assumenda doloribus officia corrupti deserunt repellendus, rerum nisi
    beatae debitis dolore eligendi accusamus dolor voluptate facilis quos odit
    deleniti pariatur a. Consequuntur qui laudantium esse rem commodi odio
    assumenda, architecto officiis consectetur quas, earum vel. Harum incidunt
    eligendi alias commodi expedita enim perspiciatis sequi nemo, numquam
    architecto ipsam? Perspiciatis eaque delectus fugit tempora iste iusto
    aspernatur asperiores, atque esse corporis, id mollitia labore eos
    doloremque consequatur! Qui officia natus voluptates cumque eum fugit aut
    iure amet quam, earum libero, rerum obcaecati beatae totam, quaerat facere
    harum! Fugiat neque laborum aspernatur ut. Minima soluta, harum quisquam
    repellat vitae eveniet doloribus omnis excepturi? A officia eius
    perferendis.
  </p>
  <br>
  <br>
  <ul class="classic-list">
    <li>Requires the util class <code>fill-text</code></li>
    <li>Speed up with additional modifier class <code>quick-fill</code></li>
    <li>Slow down with additional modifier class <code>slow-fill</code></li>
  </ul>
</section>

<!-- prettier-ignore -->
{% set hs_title = library.horizontal_scroll.title %} 
{% set hs_desc = library.horizontal_scroll.desc %}
{% set hs_message = library.horizontal_scroll.message %}
{% set hs_imgs = library.horizontal_scroll.imgs %}
{% set hs_img_parallax = library.horizontal_scroll.img_parallax %}

{% include './_includes/library/horizontal-scroll.njk' %}

<!-- Upcoming Pin stacked section-component, this will scrub. See https://neverhack.com/en -->
<!-- prettier-ignore  -->
{% set panel_nav = library.stack_scroll.panel_nav %}
{% set panel_copy = library.stack_scroll.panel_copy %} 
{% set panel_data = library.stack_scroll.panels %}
{% set panel_configs = library.stack_scroll.panel_configs %}
{% include './_includes/library/stack-scroll.njk' %}

<section class="carousel-section"></section>

<section class="video-section library-section">
  <h2 class="h5">[ Video Overlay - Utility ]</h2>
  <p>
    This can be a traditional cta or can simply wrap an element i.e. an image
    (see joinsunder)
  </p>

  <!-- prettier-ignore -->
  <button
    class="cta-1 video-toggle tab-element-page"
    data-src="{{ library.video_overlay.video_src }}"
    aria-label="Open video overlay for {{ item.title }}"
    aria-controls="video-overlay"
  >
    Toggle video overlay
  </button>
</section>

<section class="form-section">
  <h2 class="h5">[ Form Feedback - Component ]</h2>

  <!-- prettier-ignore -->
  {% set form_data = library.form_contact.form_data %}
  {% include "./_includes/library/form-feedback.njk" %}
</section>

<section class="form-section">
  <h2 class="h5">[ Form Redirect - Component ]</h2>

  <!-- prettier-ignore -->
  {% set form_data = library.form_redirect.form_data %}
  {% include "./_includes/library/form-redirect.njk" %}
</section>
